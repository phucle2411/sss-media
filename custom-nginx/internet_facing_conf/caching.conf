
upstream media_backend {
  hash $request_uri consistent;
  server  media-1.cache.local:80 max_fails=0 fail_timeout=60s;
  server  media-2.cache.local:80 max_fails=0 fail_timeout=60s;
  server  media-2.cache.local:80 max_fails=0 fail_timeout=60s;
  keepalive 128;
  
}


proxy_cache_path /data/nginx/cache/media levels=1:2 keys_zone=media_cache:200m max_size=100g inactive=40d use_temp_path=off;



server {
  listen 443 ssl http2;
  server_name media.sssmarket.com;

  ssl_certificate /etc/nginx/certs/media.sssmarket.com.crt;
  ssl_certificate_key /etc/nginx/certs/media.sssmarket.com.key;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_session_cache       shared:SSL:100m;
  ssl_session_timeout     10m;
  ssl_buffer_size 4k;
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 5s;

  access_log off;
  sendfile on;
  aio on;
  directio 4m;
  tcp_nopush on;
  tcp_nodelay on;

  access_log /var/log/nginx/media.sssmarket.com.access.log sss buffer=4k flush=1s;
  error_log   off;

  location / {
    proxy_pass_request_headers on;
    proxy_pass http://media_backend;
    proxy_next_upstream off;
    proxy_cache_key $request_uri$is_args$args;
    proxy_cache media_cache;
    proxy_cache_bypass $http_x_refresh_cache;
    proxy_cache_valid 404 10m;
    proxy_cache_valid 200 302 30d;
    proxy_cache_revalidate on;
    proxy_cache_min_uses 1;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    proxy_cache_background_update on;
    proxy_cache_lock on;

    expires 30d;
    add_header Cache-Control "public";
    add_header X-Cache-Status $upstream_cache_status;
  }
}
